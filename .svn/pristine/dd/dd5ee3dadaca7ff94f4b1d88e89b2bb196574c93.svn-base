<?php
/**
 * Created by PhpStorm.
 * User: 冯天元
 * Date: 2016/12/12
 * Time: 17:22
 */

namespace app\index\controller;


use app\core\controller\Business;
use app\index\model\AdminModel;
use app\lib\WisApi;
use think\Controller;

class Admin extends Common
{
    /** 控制台首页 */
    public function index(){
        $mid = check_login();
        $m = new AdminModel();
        $data = $m->get_user_count_info($mid);
        $this->assign('data',$data);
        return $this->fetch();
    }

    /** 频道管理列表 */
    public function channel_manage(){
        $type = input("param.type",'');
        $mid = check_login();
        $m = new AdminModel();
        $channel_list = $m->get_channel_list($mid);
        $this->assign('channel_list',$channel_list);
        $this->assign('type',$type);
        return $this->fetch();
    }

    /** 创建频道 */
    public function set_channel(){
        $mid = check_login();
        $post = input("param.","");
        extract($post);
        (empty($title)) && wrong_return("频道名称不能为空");
        //创建白板服务
        $api = new WisApi(config("LIVE_ACCESS_ID"),config("LIVE_ACCESS_KEY"));
        $param = [
            "desc" => "linglong",
            "dmsSecKey"=>"s_19d2ea8b7f9d92e2686fe9c11fec00df",
            "lssApp" => "linglong735"
        ];
        $result = $api->CreateWis($param);

        $data = [
            'uid'=>$mid,
            'status'=> 0,
            'title'=>$title,
            'wisId'=>$result['Info']['wisId'],
            'auth_key'=>$result['Info']['authKey'],
            'create_time'=>NOW_TIME
        ];

        $m = new AdminModel();
        $channel_id = $m->set_channel_do($data);
        if($channel_id > 0){
            $stream = $mid."_".$channel_id;
            //获取推流和拉流地址
            $api = new Business();
            $address = $api->get_push_url($stream);
            if(!empty($address)){
                //更新频道
                $update_data = [
                    'id'=>$channel_id,
                    'stream'=>$stream,
                    'push_url'=>$address['push_url'],
                    'rtmp'=>$address['rtmp'],
                    'hls'=>$address['hls']
                ];
                $res = $m->update_channel($update_data);
                ($res > 0) && ok_return("创建成功");
            }
        }
        wrong_return("创建失败");
    }

    /** 搜索频道 */
    public function search_channel(){
        $mid = check_login();
        $title = input("param.title",'');
        empty($title) && wrong_return("频道名称不能为空");

        $m = new AdminModel();
        $channel_info = $m->search_channel_do($mid,$title);
        empty($channel_info) && wrong_return("没找到该频道");
        $this->assign("channel_info",$channel_info);
        $data = [
            'code'=>1,
            'html'=>$this->fetch()
        ];
        die_json($data);
    }

    /** 删除频道 */
    public function del_channel(){
        $mid = check_login();
        $id = input("param.id",'');
        empty($id) && wrong_return("频道ID不存在");
        $m = new AdminModel();
        $res = $m->update_channel_info($id,"status",'-2');
        ($res > 0) && ok_return("删除成功");
        wrong_return("删除失败");
    }

    /** 频道设置管理 */
    public function channel(){
        $cid = input("param.id",'');
        $mid = check_login();
        empty($cid) && die("频道不存在");
        //查询频道详细信息
        $m = new AdminModel();
        $channel_info = $m->get_channel_info($mid,$cid);
        $video_list = $m->get_video_list($cid);
        foreach($video_list as $k=>$v){
            $video_list[$k]['data'] = $m->get_video_info($v['list_id']);
        }
//        $video_info = $m->get_video_info();
        $this->assign("channel_info",$channel_info);
        $this->assign("video_list",$video_list);
        //获取白板url
        $authKey = $channel_info["auth_key"];
        $userId = 26836;
        $wisId = $channel_info["wisId"];
        $power = 60; //观看端为1, 上麦端为60
        $domain = "";
        $expire = NOW_TIME + 24*60*60; //有效期一天
        $rand = rand(1000,9999).'';
        $signStr = $this->signStr($authKey, $userId, $wisId, $power, $domain, $expire, $rand);
        $dmn = empty($_REQUEST['domain'])?'':1;
        $recordUrl =
            "wisId=".$wisId.
            "&power=".$power.
            "&expire=".$expire.
            "&rand=".$rand.
            "&dmn=".$dmn.
            "&sign=".$signStr;
//        echo "上麦地址：".$recordUrl;
        $this->assign("recordUrl",$recordUrl);
        return $this->fetch();
    }

    public function signstr($authKey, $wisId, $userId, $domain, $power, $expire, $rand){
        $sigArr = array($wisId, $userId.'', $expire.'');
        if(!empty($power))
            $sigArr[] = $power;
        if(!empty($domain))
            $sigArr[] = $domain;
        if(!empty($rand))
            $sigArr[] = $rand;
        sort($sigArr,SORT_STRING);
        $signStr = join("",$sigArr);
        return urlencode(base64_encode(hash_hmac("sha1", $signStr, $authKey, true)));
    }


    /** 频道数据统计 */
    public function channel_count(){
        $mid = check_login();
        $m = new AdminModel();
        //获取所有频道
        $channel_list = $m->get_channel_list($mid);
        //获取列表中第一个频道的用户信息
        $r = $m->get_channel_user($channel_list[0]['id']);
        $this->assign('channel_list',$channel_list);
        $this->assign('page', $r->render());
        $this->assign('channel_user', $r->all());
        $this->assign('total',$r->total());
        return $this->fetch();
    }

    /** ajax频道用户列表 */
    public function ajax_channel_user(){
        $id = input("param.id","");
        empty($id) && wrong_return("频道ID不存在");
        $mid = check_login();
        $m = new AdminModel();
        //获取频道的用户信息
        $r = $m->get_channel_user($id);
        $this->assign('page', $r->render());
        $this->assign('channel_user', $r->all());
        $data = [
            'code'=>1,
            'total'=>$r->total(),
            'html'=>$this->fetch()
        ];
        die_json($data);
    }

    /** 频道设置 */
    public function channel_setting(){
        $id = input("param.id","");
        $this->assign('id',$id);
        return $this->fetch();
    }

    /** 频道数据统计 */
    public function channel_count_data(){
        $id = input("param.id","");
        empty($id) && wrong_return("频道ID不存在");
        $mid = check_login();
        $m = new AdminModel();
        //获取所有频道
        $channel_list = $m->get_channel_list($mid);
        //获取频道的统计信息
        $count = $m->get_channel_count_data($id);
        $this->assign('channel_list',$channel_list);
        $this->assign('count',$count);
        $this->assign('channel_id',$id);
        return $this->fetch();
    }

//    /** ajax频道数据统计 */
//    public function ajax_channel_count(){
//        $mid = check_login();
//        $id = input("param.id","");
//        empty($id) && wrong_return("频道ID不存在");
//        //获取频道的统计信息
//        $m = new AdminModel();
//        $count = $m->get_channel_count_data($id);
//        $this->assign('count',$count);
//        $data = [
//            "code"=>1,
//            "channel_title"=>$count['channel_title'],
//            "html"=>$this->fetch()
//        ];
//        die_json($data);
//    }

    /** 频道每月新增人数 */
    public function count_text(){
        $id = input("param.id",'');
        $res = db_func("channel_record","sp_")->where("cid",$id)->order("create_time")->select();
        $data = array();
        foreach($res as $key=>$value){
            $value['flag'] = date("m",$value['create_time']);
            if(!isset($data[$value['flag']])){
                $data[$value['flag']] = 0;
            }
            $data[$value['flag']] ++;
        }
        die_json($data);
    }
    /** 获取上传插件页面 */
    public function upload_html(){
        $post = input('param.','');
        if(empty($post['cid'] || empty($post['lid'])))  wrong_return("参数异常,请重新上传");
        session("chan_info",$post);
        $data = [
            'code'=>1,
            'html'=>$this->fetch()
        ];
        die_json($data);
    }
    /** 上传执行　*/
    public function upload_do()
    {
        $mid = check_login();
        // Make sure file is not cached (as it happens for example on iOS devices)
        header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Cache-Control: no-store, no-cache, must-revalidate");
        header("Cache-Control: post-check=0, pre-check=0", false);
        header("Pragma: no-cache");

        $access_id =  config("LIVE_ACCESS_ID"); //填入access_id
        $access_key = config("LIVE_ACCESS_KEY");//填入access_key
        $upload_api = 'http://upload.dvr.aodianyun.com/v2'; //上传接口地址
// 5 minutes execution time
        @set_time_limit(5 * 60);
// Get a file name
        if (isset($_POST["name"])) {
            $fileName = $_POST["name"];
        } elseif (isset($_GET["name"])) {
            $fileName = $_GET["name"];
        } elseif (!empty($_FILES)) {
            $fileName = $_FILES["file"]["name"];
        }

// Chunking might be enabled
        $chunk = 0;
        $chunks = 0;
        if (isset($_POST["chunk"])) {
            $chunk = intval($_POST["chunk"]);
        } elseif (isset($_GET["chunk"])) {
            $chunk = intval($_GET["chunk"]);
        }
        if (isset($_POST["chunks"])) {
            $chunks = intval($_POST["chunks"]);
        } elseif (isset($_GET["chunks"])) {
            $chunks = intval($_GET["chunks"]);
        }

        if (!empty($_FILES)) {
            if ($_FILES["file"]["error"] || !$_FILES["file"]["size"] || !is_uploaded_file($_FILES["file"]["tmp_name"])) {
                die('{"Flag":101,"FlagString":"服务器异常，无法移动上传的文件。"}');
            }
        }

        $part = urlencode(base64_encode(file_get_contents($_FILES["file"]["tmp_name"])));
        $partNum = $chunk + 1;//partNum从1开始
        $param = array(
            'access_id' => $access_id,
            'access_key' => $access_key,
            'fileName' => $fileName,
            'part' => $part,
            'partNum' => $partNum
        );
        $res = $this->curl($upload_api . '/DVR.UploadPart', 'parameter=' . json_encode($param));
        if (!empty($res)) {
            $res = json_decode($res, true);
            if ($res['Flag'] != 100) {
                die('{"Flag":102,"FlagString":"' . $res['FlagString'] . '"}');
            }
        } else {
            die('{"Flag":102,"FlagString":"Part文件上传接口或网络异常"}');
        }

// Check if file has been uploaded
        if (!$chunks || $chunk == $chunks - 1) {
            $param = array(
                'access_id' => $access_id,
                'access_key' => $access_key,
                'fileName' => $fileName
            );
            $success = $this->curl($upload_api . '/DVR.UploadComplete', 'parameter=' . json_encode($param));
            if (!empty($success)) {
                $res = json_decode($success, true);
                if ($res['Flag'] != 100) {
                    die('{"Flag":102,"FlagString":"' . $res['FlagString'] . '"}');
                }
                if(isset($res['location']) && isset($res['fileName'])){
                    $arr = [
                        'access_id' => $access_id,
                        'access_key' => $access_key,
                         'url'=>$res['location']
                    ];
                    $video_info = $this->curl("http://openapi.aodianyun.com/v2/VOD.GetUploadVodList",'parameter=' . json_encode($arr));

                    if(!empty($video_info)){
                        //插入数据库
                        $video = json_decode($video_info, true);
                        $info = session("chan_info");
                        $data = [
                            'cid'=>$info['cid'],
                            'lid'=>$info['lid'],
                            'name'=>$fileName,
                            'cover_img'=>$video['List'][0]['thumbnail'],
                            'duration'=>pc_auto_sec(intval($video['List'][0]['duration'])),
                            'mss_url'=>$res['location'],
                            'vod_url'=>$video['List'][0]['adaptive'],
                            'create_time'=>NOW_TIME
                        ];
                        db_func("channel_video")->insert($data);
                    }
                }
            } else {
                die('{"Flag":102,"FlagString":"上传完成接口或网络异常"}');
            }
        }
        die('{"Flag":100,"FlagString":"上传完成"}');
    }
    public function curl($url, $data)
    {
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, false);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_NOBODY, true);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        $return_str = curl_exec($curl);
        curl_close($curl);
        return $return_str;
    }

    /** 添加视频列表 */
    public function add_video_list(){
        $post = input("param."."");
        extract($post);
        empty($cid) && wrong_return("频道ID不能为空");
        $m = new AdminModel();
        $list_id = $m->add_video_list_do($cid);
        ($list_id > 0) && ok_return('success',1,$list_id);
    }

    /** 修改频道列表直播信息 */
    public function update_video(){
        $post = input("param."."");
        extract($post);
        empty($list_name) && wrong_return("列表名称不能为空");
        empty($list_id) && wrong_return("列表id不能为空");
        $m = new AdminModel();
        $res = $m->update_video_do($list_id,$list_name);
        ($res !== false) && ok_return("操作成功");
        wrong_return("操作失败");
    }

    /** 拉流直播 */
    public function update_live(){
        $post = input("param.",'');
        $this->assign('rtmp_url',$post['live_url']);
        $this->assign('rank',NOW_TIME);
        $data = [
            'code'=>1,
            'html'=>$this->fetch("live")
        ];
        die_json($data);
    }

    /** 列表点播直播 */
    public function hls_live(){
        $post = input("param.",'');
        extract($post);
        (empty($cid) || empty($lid)) && wrong_return("缺少参数");
        $m = new AdminModel();
        $data = [];
        $list = $m->get_hls_list($cid,$lid);
        foreach($list as $k=>$v){
            $data[] = $v['vod_url'];
        };
        ok_return("success",1,$data);
    }

    /** 白板观看页面 */
    public function white_live(){
        $api = new WisApi(config("LIVE_ACCESS_ID"),config("LIVE_ACCESS_KEY"));
//        $param['wisId'] = "lc_fd8bc7344dbe52a32106ae20cdcffe7f";
        $param = [
            "desc" => "linglong",
            "dmsSecKey"=>"s_19d2ea8b7f9d92e2686fe9c11fec00df",
            "lssApp" => "linglong735"
        ];
        $data = $api->CreateWis($param);
//        $data = $api->WisInfo($param);
        dump($data);
       return $this->fetch();
    }

    public function interface1(){
        $api = new WisApi(config("LIVE_ACCESS_ID"),config("LIVE_ACCESS_KEY"));

        $method = $_REQUEST['method'];
        if($method == "AllowDraw"){
            echo json_encode(array("Flag"=>100));
            exit();
        }
        $rst = $api->$method($_REQUEST);
        echo json_encode($rst);
    }
}