<?php
/**
 * Created by PhpStorm.
 * User: 翟垒垒
 * Date: 2016/12/5
 * Time: 14:06
 */
namespace app\index\controller;

use app\index\model\LoginModel;
use think\Controller;
class CommonIndex extends Controller
{
    public function __construct()
    {
        parent::__construct();

        $mid = session("member_id");
        if (!empty($mid)) {
//            $this->check_same_time_login();
            $user_info = $this->get_user_base_info($mid);//获取用户的基本信息
            $this->assign([
                'member_info' => $user_info,
            ]);
        } else {
            $mid = cookie('member_id');
            $cookie_code = cookie('cookie_code');
            if (!empty($mid) && !empty($cookie_code)) {
                //检测用户免登录过期时间
                $res = $this->check_cookie_login($mid, $cookie_code);
                if ($res == 1) {
                    $result = $this->com_login($mid);
                    if ($result == 1) {
                        $user_info = $this->get_user_base_info($mid);//获取用户的基本信息
                        $this->assign([
                            'member_info' => $user_info,
                        ]);
                    }
                }
            }
        };
    }
//
//    /** 查询用户基本信息 */
//    public function get_user_base_info($mid)
//    {
//        //根据id查询用户信息
//        return $user_info = db("member m")
//            ->join("recharge_conf c", "m.package_id = c.id", "LEFT")
//            ->where(['m.status' => 1, 'member_id' => $mid])
//            ->field('m.member_id,m.num_id,m.nick_name,m.state,m.phone,m.email,m.account_type,m.balance,m.user_type,m.user_face,c.name')
//            ->cache(60)
//            ->find();
//    }
    /** 查询用户基本信息 */
    public function get_user_base_info($mid)
    {
        //根据id查询用户信息
        return $user_info = db("member m")
            ->join("user_package p","m.member_id = p.uid")
            ->where(['m.status' => 1, 'm.member_id' => $mid,'p.status'=>1])
            ->field("m.*,p.type")
            ->find();
    }

    /** 检测用户是否已登录 */
    public function check_login()
    {
        $member_id = session("member_id");
        if ($member_id == NULL) {
            $this->redirect(Url('index/login/index'));
        }
    }

    /** 检测是否同时登录(同一账号只允许一个地方登录) */
    public function check_same_time_login()
    {
        $session_id = session("session_id");
        $member_id = session("member_id");
        $re_session_id = db("session_pc")->where("uid", $member_id)->find()['session_id'];
        if ($session_id !== $re_session_id) {
            session(NULL);
            $this->redirect(url("index/index/index"));
        }
    }

    /** 检测用户cookie免登录过期时间 */
    public function check_cookie_login($mid, $cookie_code)
    {
        $cookie_info = db('session_pc')->where(['uid' => $mid, 'cookie_code' => $cookie_code])->find();
        if (empty($cookie_info)) {
            return -1;
        } else if ($cookie_info['cookie_expire_time'] < NOW_TIME) {
            return -1;
        } else {
            return 1;
        }
    }

    /** 公共登录接口 */
    public function com_login($mid, $free_login = 'false')
    {
        $m = new LoginModel();
        $user_info = $m->get_user_info_by_mid($mid);
        if (empty($user_info)) return -1;//用户不存在
        if ($user_info['status'] == -1) return -1;//"该用户已被禁用";

        //更新用户信息
        $user_map['member_id'] = $user_info['member_id'];

        $user_data['last_login_ip'] = get_client_ip();
        $user_data['last_login_time'] = NOW_TIME;
        $user_data['login_count'] = $user_info['login_count'] + 1;

        $user_up = db('member')->where($user_map)->update($user_data);
        if ($user_up <= 0) return -1;//"用户信息更新错误";

        //记录用户登录信息日志
        $m->set_login_info($user_info);

        //检测session和cookie信息
        $session_info = $m->get_session_info($mid);
        //插入用户session表
        $randsal = createNumber(4);
        $session_data['uid'] = $user_info['member_id'];
        $session_data['session_id'] = md5(NOW_TIME . $user_info['member_id'] . $randsal);
        $session_data['enable'] = 'true';
        $session_data['create_time'] = NOW_TIME;
        $session_data['session_expire_time'] = NOW_TIME + config('session_expire'); //1天session过期
        $session_data['randsal'] = $randsal;
        //判断是否需要更新cookie信息
        if ($session_info['cookie_expire_time'] < NOW_TIME && $free_login) {
            $session_data['cookie_code'] = create_order_num();
            $session_data['cookie_expire_time'] = NOW_TIME + 86400 * 15;
            cookie(null);
            cookie('member_id', $mid, 86400 * 15);
            cookie("cookie_code", $session_data['cookie_code'], 86400 * 15);
        } else {
            cookie(null);
            cookie('member_id', $mid, 86400 * 15);
            cookie("cookie_code", $session_info['cookie_code'], 86400 * 15);
        }
        //有就更新，没就增加
        if ($session_info) {
            $res = db('session_pc')->where('uid', $user_info['member_id'])->update($session_data);
        } else {
            $res = db('session_pc')->insert($session_data);
        }
        if ($res !== false) {
            session(null);
            session("session_id", $session_data['session_id']);
            session("member_id", $mid);
            return 1;
        } else {
            return -1;//"session写入失败";
        }
    }
}
